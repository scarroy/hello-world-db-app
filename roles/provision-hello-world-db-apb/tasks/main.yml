#############################################################################
# Provision hello-world-db
# This role executes much of the needed functionality to provision a
# Postgres database using an Ansible Playbook Bundle.
#############################################################################


#############################################################################
# An OpenShift persistent volume claim will allow the database to save between
# restarts.
# https://docs.openshift.org/latest/architecture/additional_concepts/storage.html#persistent-volume-claims
#############################################################################
- name: create volumes
  k8s_v1_persistent_volume_claim:
    name: hello-world-db
    namespace: '{{ namespace }}'
    state: present
    access_modes:
      - ReadWriteOnce
    resources_requests:
      storage: 1Gi



#############################################################################
# An OpenShift Origin deployment configuration provides a replication
# controller, spins up pods, and also provides the ability to transition from
# one deployment of an image to a new one.
# https://docs.openshift.org/latest/architecture/core_concepts/deployments.html#deployments-and-deployment-configurations
#############################################################################
- name: create hello-world-db deployment config
  openshift_v1_deployment_config:
    name: hello-world-db
    namespace: '{{ namespace }}'
    labels:
      app: hello-world-db
      service: hello-world-db
    replicas: 1
    selector:
      app: hello-world-db
      service: hello-world-db
    spec_template_metadata_labels:
      app: hello-world-db
      service: hello-world-db
    containers:
    - env:
      - name: POSTGRESQL_PASSWORD
        value: '{{ postgresql_password }}'
      - name: POSTGRESQL_USER
        value: '{{ postgresql_user }}'
      - name: POSTGRESQL_DATABASE
        value: '{{ postgresql_database }}'
      image: docker.io/centos/postgresql-94-centos7
      name: hello-world-db
      ports:
      - container_port: 5432
        protocol: TCP
      termination_message_path: /dev/termination-log
      volume_mounts:
      - mount_path: /var/lib/pgsql/data
        name: hello-world-db
      working_dir: /
    volumes:
    - name: hello-world-db
      persistent_volume_claim:
        claim_name: hello-world-db
      test: false
      triggers:
      - type: ConfigChange



#############################################################################
# A Kubernetes service serves as an internal load balancer.  It identifies a
# set of replicated pods in order to proxy the connections it receives to them.
# https://docs.openshift.org/latest/architecture/core_concepts/pods_and_services.html#services
#############################################################################
- name: create hello-world-db service
  k8s_v1_service:
    name: hello-world-db
    namespace: '{{ namespace }}'
    state: present
    labels:
      app: hello-world-db
      service: hello-world-db
    selector:
      app: hello-world-db
      service: hello-world-db
    ports:
    - name: port-5432
      port: 5432
      protocol: TCP
      target_port: 5432



#############################################################################
# Bindable services must make credentials available to the Ansible Service
# Broker during the provision stage.  They will later be made available to
# applications after a binding is created.
# https://github.com/kubernetes-incubator/service-catalog/blob/master/docs/design.md#using-a-service-instance
#############################################################################
- name: encode bind credentials
  asb_encode_binding:
    fields:
      DB_TYPE: postgres
      DB_HOST: hello-world-db
      DB_PORT: "5432"
      DB_USER: "{{ postgresql_user }}"
      DB_PASSWORD: "{{ postgresql_password }}"
      DB_NAME: "{{ postgresql_database }}"
